# MongoDB Configuration (MongoDB Atlas)
# Replace with your actual MongoDB connection string
MONGO_URL=mongodb+srv://<username>:<password>@<cluster>.mongodb.net/
DB_NAME=chess_results

# Server Configuration
PORT=3001
NODE_ENV=development

# CORS Configuration
# In production, replace * with your frontend domain
CORS_ORIGINS=http://localhost:3000

# Authentication Configuration
# Generate a strong JWT secret (use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))")
JWT_SECRET=your_very_strong_jwt_secret_here_64_characters_minimum
ADMIN_EMAIL=admin@chessresults.com
# Use a strong admin password (minimum 12 characters, mixed case, numbers, symbols)
ADMIN_PASSWORD=your_strong_admin_password_here

# Google API Configuration (optional - for automatic form creation)
# Leave empty to use template URLs instead
# GOOGLE_SERVICE_ACCOUNT_KEY={"type":"service_account",...}
# OR use OAuth2 (for personal use)
# GOOGLE_CLIENT_ID=your-client-id
# GOOGLE_CLIENT_SECRET=your-client-secret
# GOOGLE_REFRESH_TOKEN=your-refresh-token

# Backend URL (for webhook configuration)
BACKEND_URL=http://localhost:3001
# Frontend URL (used to build password reset link)
FRONTEND_URL=http://localhost:3000
# App name for emails
APP_NAME=Chess Results

# SMTP (Email) Configuration - required to send emails
# If not set, emails will be skipped but the API will still respond generically
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_smtp_username
SMTP_PASS=your_smtp_password
SMTP_FROM="Chess Results <no-reply@yourdomain.com>"

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/app.log
